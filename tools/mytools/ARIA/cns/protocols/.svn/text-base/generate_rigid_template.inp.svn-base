!$Revision: 1.1.1.1 $
!$Date: 2010/03/23 15:27:16 $
!$RCSfile: generate_rigid_template.inp,v $

!     ************************************
!     * Authors and copyright:           *
!     * Michael Nilges, Jens Linge, EMBL *
!     * No warranty implied or expressed *
!     * All rights reserved              *
!     ************************************

@RUN_CNS:run.cns(
spectrum  =$spectrum;
filenames =$filenames;
spectra   =$spectra;
data      =$data;
iterations=$iterations;
saprotocol=$saprotocol;
refine    =$refine;
relax     =$relax;
toppar    =$toppar;
analysis  =$analysis;
)

evaluate ($iteration = $data.iteration)

!set the energy flags:
@@RUN:protocols/flags_new.cns(Iteration=$Iteration; Data=$Data; )


!read the .psf files:
evaluate ($psfcount = 1)
while ($psfcount le 5) loop pars
   if ($filenames.structure_$psfcount ne "") then
      evaluate ($structurefile = "RUN:begin/" + $Filenames.structure_$psfcount)
      structure @@$structurefile end     
   end if
   evaluate ($psfcount = $psfcount + 1)
end loop pars

!Added by B. Bardiaux for dimers ; 22/10/04
if ($Toppar.symmetry eq "2") then
	delete selection= (not segid $Toppar.prot_segid_1) end
end if

! End of modification

if ($Data.flags.sani = true) then
  parameter @@RUN:toppar/par_axis.pro end
end if

!read the parameter files:
evaluate ($par_nonbonded = $toppar.par_nonbonded)
evaluate ($parcount = 1)
while ($parcount le 5) loop pars
   if ($Toppar.prot_par_$parcount ne "") then
      evaluate($prot_par_file= "RUN:toppar/" + $Toppar.prot_par_$parcount)
      parameter @@$prot_par_file end
   end if
   evaluate ($parcount = $parcount + 1)
end loop pars

{
if ($Data.flags.sani = true) then
  structure @@RUN:toppar/tensor.psf end
end if
}

ident (x) ( all )
do (x=x/5.) ( all )
do (y=random(0.5) ) ( all )
do (z=random(0.5) ) ( all )

do (fbeta=50) (all)          {* friction coefficient, in 1/ps *}
do (mass=100) (all)          {* heavy masses, in amu          *}




! bardiaux
evaluate($dihed_param_file= "RUN:begin/dihed.param")
set echo off message off end

topology
  presidue PEPT 
    ADD DIHEdral  -N -CA -C +N 
 end
end
@RUN:protocols/patch_psi.cns

parameter 

   nbonds
      cutnb=6.5 rcon=50. nbxmod=-2 repel=1.2  wmin=0.1 tolerance=1.
      rexp=4 irexp=1 inhibit=0.0
   end       

   !remove any disuphide bonds :
   bonds  (name sg) (name sg) 0.0 TOKEN
   angles (all) (name sg) (name sg) 0.0 TOKEN

   !set all force constants uniform to make dynamics more stable:
   bonds    (all) (all) 1000.0 token
   angles   (all) (all) (all) 500.0 token
   improper (all) (all) (all) (all) 500.0 token token 
   
   ! bardiaux
   @@$dihed_param_file

end 

!bardiaux
@@RUN:protocols/read_rigid_data.cns(Iteration=$Iteration; Data=$Data)

flags exclude * include bond angle vdw dihed noe end     ! dihed + noe  by bardiaux

minimize powell nstep=200  nprint=10 end

flags include impr end

minimize powell nstep=200 nprint=10 end

do (vx=maxwell(1000)) (all)
do (vy=maxwell(1000)) (all)
do (vz=maxwell(1000)) (all)

dynamics  cartesian
   nstep=1000  timestep=0.001   
   tcoupling = true  temperature = 1000.   nprint=50  
   cmremove=true cmperiodic=0 
end

parameter 
   nbonds
      rcon=25. nbxmod=5 repel=1.0
   end
end

minimize powell nstep=100 nprint=10 end 

dynamics  cartesian
   nstep=4000  timestep=0.005   
   tcoupling = true  temperature = 200.   nprint=100 
   cmremove=true cmperiodic=0  
end

minimize powell nstep=200 nprint=50 end

set echo off message off end

!Added by B. Bardiaux for dimers ; 22/10/04
if ($Toppar.symmetry eq "2") then
	evaluate ($segidcount = 2)
	while ($segidcount le $Toppar.mononum) loop segs
   		evaluate ($segid = $Toppar.prot_segid_$segidcount)
   		duplicate sele=(segid $Toppar.prot_segid_1) segid= $segid end
   		evaluate ($segidcount = $segidcount + 1)
	end loop segs
     
	coor orient end
	evaluate ($rotation = 360/$Toppar.mononum)
	evaluate ($rotangle = 0)


   	do (z = z + 5) (segid *)
   	coor rotate selection= (segid $Toppar.prot_segid_2) axis (0 1 0) 180 end

	coor orient end
end if
!End of modification
                                               {* write coordinates *}
remarks produced by nmr/generate_rigid_template.inp
evaluate ($templatefile = "RUN:" + "begin/" + $Filenames.rigid_template)
write coordinates output=$templatefile end  
print threshold=1.0 impropers 

stop









