<tool id="pileup2cov" name="Mpileup convertor" version="0.0.1">
    <description>Convert a .mpileup file into a SynTView .coverage file</description>
    <command>pileup2cov.py 
    #if $flag.flaglength == "yes":
        -l $flag.length
    #end if
    $source.mpileupfile
    #if $source.index_source == "history":
        $source.ref_file
    #else
        ${source.index.fields.path}
    #end if
    $output
    </command>
    <inputs>
        <conditional name="source">
          <param name="index_source" type="select" label="Choose the source for the reference list">
            <option value="cached">Locally cached</option>
            <option value="history">History</option>
          </param>
          <when value="cached">
            <param name="mpileupfile" type="data" format="mpileup" metadata_name="dbkey" label="Coverage input file in .mpileup format (see http://samtools.sourceforge.net/)">
              <validator type="unspecified_build" />
              <validator type="dataset_metadata_in_data_table" table_name="fasta_indexes" metadata_name="dbkey" metadata_column="1" message="Sequences are not currently available for the specified build." />
            </param>
            <param name="index" type="select" label="Using reference genome">
              <options from_data_table="fasta_indexes">
                <filter type="data_meta" ref="mpileupfile" key="dbkey" column="1" />
                <validator type="no_options" message="No reference genome is available for the build associated with the selected input dataset" />
              </options>
            </param>
          </when>
          <when value="history">
            <param name="mpileupfile" type="data" format="mpileup" label="Coverage input file in .mpileup format (see http://samtools.sourceforge.net/)" />
            <param name="ref_file" type="data" format="fasta" metadata_name="dbkey" label="Fasta file of the reference genome (needed to get the true length of genome as .mpileup file doesn't include 0 coverage positions" />
          </when>
      </conditional>
      <conditional name="flag">
          <param name="flaglength" type="select" label="Do you want use a windows to calculate mean coverage?">
              <option value="yes">yes</option>
              <option value="no" selected="True">no</option>
          </param>
          <when value="yes">
              <param name="length" type="integer" value="10" label="Length n of windows to calculate mean coverage from"/>
          </when>
          <when value="no"/>
      </conditional>
    </inputs>
    <outputs>
        <data name="output" format="tabular"/>
    </outputs>
    <tests>
    </tests>
    <help>
    **What it does** 
    Convert a Mpileup file (generated by samtools) into a custom format suited for SynTView integration in which coverage is averaged over -l length windows.
    </help>      
</tool>
